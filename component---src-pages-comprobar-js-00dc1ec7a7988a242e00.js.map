{"version":3,"file":"component---src-pages-comprobar-js-00dc1ec7a7988a242e00.js","mappings":"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","sources":["webpack://gatsby-starter-solidstate/./node_modules/@emailjs/browser/es/store/store.js","webpack://gatsby-starter-solidstate/./node_modules/@emailjs/browser/es/utils/validateParams.js","webpack://gatsby-starter-solidstate/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://gatsby-starter-solidstate/./node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","webpack://gatsby-starter-solidstate/./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://gatsby-starter-solidstate/./node_modules/@emailjs/browser/es/api/sendPost.js","webpack://gatsby-starter-solidstate/./node_modules/@emailjs/browser/es/index.js","webpack://gatsby-starter-solidstate/./node_modules/@emailjs/browser/es/methods/init/init.js","webpack://gatsby-starter-solidstate/./node_modules/@emailjs/browser/es/methods/send/send.js","webpack://gatsby-starter-solidstate/./node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","webpack://gatsby-starter-solidstate/./src/pages/Comprobar.js"],"sourcesContent":["export var store = {\n  _origin: 'https://api.emailjs.com'\n};","export var validateParams = function validateParams(publicKey, serviceID, templateID) {\n  if (!publicKey) {\n    throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n  }\n  if (!serviceID) {\n    throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n  }\n  if (!templateID) {\n    throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n  }\n  return true;\n};","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import _createClass from \"/home/dan/Work/ubronline/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/home/dan/Work/ubronline/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nexport var EmailJSResponseStatus = /*#__PURE__*/_createClass(function EmailJSResponseStatus(httpResponse) {\n  _classCallCheck(this, EmailJSResponseStatus);\n  this.status = httpResponse ? httpResponse.status : 0;\n  this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n});","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport var sendPost = function sendPost(url, data) {\n  var headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return new Promise(function (resolve, reject) {\n    var xhr = new XMLHttpRequest();\n    xhr.addEventListener('load', function (_ref) {\n      var target = _ref.target;\n      var responseStatus = new EmailJSResponseStatus(target);\n      if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n        resolve(responseStatus);\n      } else {\n        reject(responseStatus);\n      }\n    });\n    xhr.addEventListener('error', function (_ref2) {\n      var target = _ref2.target;\n      reject(new EmailJSResponseStatus(target));\n    });\n    xhr.open('POST', store._origin + url, true);\n    Object.keys(headers).forEach(function (key) {\n      xhr.setRequestHeader(key, headers[key]);\n    });\n    xhr.send(data);\n  });\n};","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n  init: init,\n  send: send,\n  sendForm: sendForm\n};","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} publicKey - set the EmailJS public key\n * @param {string} origin - set the EmailJS origin\n */\nexport var init = function init(publicKey) {\n  var origin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'https://api.emailjs.com';\n  store._userID = publicKey;\n  store._origin = origin;\n};","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport var send = function send(serviceID, templateID, templatePrams, publicKey) {\n  var uID = publicKey || store._userID;\n  validateParams(uID, serviceID, templateID);\n  var params = {\n    lib_version: '3.9.1',\n    user_id: uID,\n    service_id: serviceID,\n    template_id: templateID,\n    template_params: templatePrams\n  };\n  return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n    'Content-type': 'application/json'\n  });\n};","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nvar findHTMLForm = function findHTMLForm(form) {\n  var currentForm;\n  if (typeof form === 'string') {\n    currentForm = document.querySelector(form);\n  } else {\n    currentForm = form;\n  }\n  if (!currentForm || currentForm.nodeName !== 'FORM') {\n    throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n  }\n  return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport var sendForm = function sendForm(serviceID, templateID, form, publicKey) {\n  var uID = publicKey || store._userID;\n  var currentForm = findHTMLForm(form);\n  validateParams(uID, serviceID, templateID);\n  var formData = new FormData(currentForm);\n  formData.append('lib_version', '3.9.1');\n  formData.append('service_id', serviceID);\n  formData.append('template_id', templateID);\n  formData.append('user_id', uID);\n  return sendPost('/api/v1.0/email/send-form', formData);\n};","import React, { useRef } from 'react';\nimport emailjs from '@emailjs/browser';\n\nimport Layout from '../components/Layout';\n\nexport default function IndexPage() {\n  const form = useRef();\n\n  const sendEmail = (e) => {\n    e.preventDefault();\n\n    emailjs\n      .sendForm(\n        'service_smhaj7f', //'YOUR_SERVICE_ID',\n        'template_alsfqvn', //'YOUR_TEMPLATE_ID',\n        form.current,\n        'phP3Y2bB2iA7YN1Gc' //'YOUR_PUBLIC_KEY'\n      )\n      .then(\n        (result) => {\n          console.log(result.text);\n        },\n        (error) => {\n          console.log(error.text);\n        }\n      );\n  };\n\n  return (\n    <Layout fullMenu>\n      <section id=\"wrapper\">\n        <header>\n          <div className=\"inner\">\n            <h2 className=\"major\">Verificación</h2>\n            <p>\n              Para verificar trámite, ingresar Número UBRO y correo electrónico\n              con el cual inicio su trámite{' '}\n            </p>\n\n            <form method=\"post\" action=\"/#\" ref={form} onSubmit={sendEmail}>\n              <div className=\"fields\">\n                <div className=\"field\">\n                  <label htmlFor=\"email\">Numero UBRO</label>\n                  <input type=\"text\" name=\"n_ubro\" id=\"email\" />\n                </div>\n                <div className=\"field\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input type=\"email\" name=\"email\" id=\"email\" />\n                </div>\n                <div className=\"field\">\n                  <label htmlFor=\"numero\">Numero</label>\n                  <input type=\"text\" name=\"n_cel\" id=\"numero\" />\n                </div>\n              </div>\n              <ul className=\"actions\">\n                <li>\n                  <input type=\"submit\" value=\"Enviar Mensaje\" />\n                </li>\n              </ul>\n            </form>\n          </div>\n        </header>\n      </section>\n    </Layout>\n  );\n}\n"],"names":["store","_origin","validateParams","publicKey","serviceID","templateID","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","EmailJSResponseStatus","httpResponse","instance","TypeError","_classCallCheck","this","status","text","responseText","sendPost","url","data","headers","arguments","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","_ref","responseStatus","_ref2","open","keys","forEach","setRequestHeader","send","init","origin","_userID","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","form","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","IndexPage","useRef","fullMenu","id","className","method","action","ref","onSubmit","e","preventDefault","emailjs","current","then","result","console","log","error","htmlFor","type","name","value"],"sourceRoot":""}